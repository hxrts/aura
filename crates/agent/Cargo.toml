# DeviceAgent implementation - provides high-level identity and key derivation APIs
[package]
name = "aura-agent"
version = "0.1.0"
edition = "2021"
rust-version = "1.75"
authors = ["Aura Contributors"]
license = "MIT OR Apache-2.0"

[dependencies]
# Workspace crates
aura-coordination = { path = "../coordination" }
aura-session-types = { path = "../session-types" }
aura-journal = { path = "../journal" }
aura-crypto = { path = "../crypto" }
aura-transport = { path = "../transport" }
aura-groups = { path = "../groups" }
aura-store = { path = "../store" }

# Cryptography
frost-ed25519 = { workspace = true }
ed25519-dalek = { workspace = true }
blake3 = { workspace = true }
hkdf = { workspace = true }
sha2 = { workspace = true }
hpke = { workspace = true }
zeroize = { workspace = true }
aes-gcm = { workspace = true }
qrcode = { version = "0.13", optional = true }

# Serialization  
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_cbor = "0.11"
bincode = "1.3"

# Async
tokio = { version = "1.35", features = ["full"] }
futures = "0.3"

# Utilities
uuid = { version = "1.6", features = ["v4", "v5", "serde"] }
time = { version = "0.3", features = ["serde"] }
thiserror = "1.0"
anyhow = "1.0"
tracing = "0.1"
rand = "0.8"
hex = "0.4"
toml = "0.8"
dirs = "5.0"
reqwest = { version = "0.11", features = ["json", "rustls-tls"] }

# Platform-specific secure storage
[target.'cfg(target_os = "macos")'.dependencies]
security-framework = "2.9"
core-foundation = "0.9"

[target.'cfg(target_os = "ios")'.dependencies]
security-framework = "2.9"
core-foundation = "0.9"

[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.52", features = ["Win32_Security_Credentials", "Win32_System_Diagnostics_ToolHelp", "Win32_Foundation"] }

[target.'cfg(target_os = "linux")'.dependencies]
keyutils = "0.1"


[features]
default = []
qrcode = ["dep:qrcode"]

[dev-dependencies]
tokio-test = "0.4"
