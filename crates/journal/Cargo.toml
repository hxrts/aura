# Event-sourced account journal - CRDT-based event log with derived state
[package]
name = "aura-journal"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
authors.workspace = true
license.workspace = true

[lints]
workspace = true

[dependencies]

# Internal crates
aura-types = { path = "../aura-types" }
aura-crypto = { path = "../crypto" }
protocol-core = { path = "../protocol-core" }
keyhive_core = { workspace = true }
# aura-session-core = { path = "../aura-session-core" }  # For future session types implementation

# CRDT
automerge = { workspace = true }

# Cryptography provided through aura-crypto
blake3 = { workspace = true }
ed25519-dalek = { workspace = true }
frost-ed25519 = { workspace = true }
signature = { workspace = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }
serde_cbor = { workspace = true }
bincode = { workspace = true }

# Async
tokio = { workspace = true }

# Utilities
uuid = { workspace = true }
time = { workspace = true }
thiserror = { workspace = true }
anyhow = { workspace = true }
tracing = { workspace = true }
rand = { workspace = true }
hex = { workspace = true }

[dev-dependencies]
aura-test-utils = { path = "../test-utils" }
tokio-test = "0.4"
rand_chacha = { workspace = true }
proptest = { workspace = true }
