# Top-level workspace for Aura - threshold identity and encrypted storage platform
[workspace]
resolver = "2"
exclude = ["ext/*"]  # ext/* are external dependencies
# Note: ext/quint/evaluator still shows profile warnings due to path dependency in quint-api
members = [
    "crates/agent",
    "crates/groups",
    "crates/coordination",
    "crates/protocol-core",
    "crates/crypto",
    "crates/journal",
    "crates/store",
    "crates/transport",
    "crates/test-utils",
    "crates/cli",
    "crates/simulator",
    "crates/aura-errors",
    "crates/aura-interfaces",
    # "crates/db-test",       # Temporarily disabled - needs error API migration
    "crates/console-types",
    # Temporarily disabled - depend on legacy simulator APIs
    # "crates/sim-server",
    # "crates/sim-client",
    # "crates/live-client",
    # "crates/analysis-client",
    # "crates/wasm-core", # Temporarily disabled - needs error API migration
    "crates/quint-api",
    "crates/session-types",
    "crates/aura-types",
    # "crates/console",       # Temporarily disabled - needs error API migration
]


[workspace.package]
version = "0.1.0"
edition = "2021"
rust-version = "1.75"
authors = ["Aura Contributors"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/aura-project/aura"

[workspace.dependencies]
# Cryptography
frost-core = "1.0"
frost-ed25519 = "1.0"
ed25519-dalek = { version = "2.1", features = ["serde"] }
curve25519-dalek = "4.1"
blake3 = "1.5"
hkdf = "0.12"
sha2 = "0.10"
aes-gcm = "0.10"
hpke = "0.12"
chacha20poly1305 = "0.10"
zeroize = { version = "1.7", features = ["derive"] }

# CRDT & serialization
automerge = "0.5"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_cbor = "0.11"
bincode = "1.3"

# Async runtime & networking
tokio = { version = "1.35", features = ["full"] }
futures = "0.3"
async-trait = "0.1"
reqwest = { version = "0.11", features = ["json", "rustls-tls"] }
axum = "0.7"
snow = "0.9"

# Storage
redb = "2.0"

# Utilities
uuid = { version = "1.6", features = ["v4", "v5", "serde"] }
time = { version = "0.3", features = ["serde"] }
thiserror = "1.0"
anyhow = "1.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }


# CLI
clap = { version = "4.4", features = ["derive"] }
toml = "0.8"

# Additional utilities
rand = "0.8"
rand_chacha = "0.3"
hex = "0.4"
indexmap = "2.0"
proptest = "1.4"
dirs = "5.0"

# WASM Core
wasm_core = { path = "crates/wasm-core" }

# Authorization & CGKA (placeholder until Keyhive is available)
# keyhive_core = { git = "https://github.com/inkandswitch/keyhive", rev = "main" }

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
strip = true
# Enable debug info for better error messages in production
debug = true

[profile.dev]
opt-level = 0
debug = true

# WASM-optimized profile for size (used by console and client crates)
[profile.wasm]
inherits = "release"
opt-level = "s"  # Optimize for size
lto = true
codegen-units = 1
strip = false  # Keep debug info for WASM stack traces
debug = true

# Lint configuration to enforce effects system usage
[workspace.lints.clippy]
# Deny problematic patterns that bypass the effects system
disallowed_methods = "deny"
disallowed_types = "deny"
missing_docs_in_private_items = "allow"

# Additional lints for code quality
too_many_arguments = "warn"
type_complexity = "warn"
unwrap_used = "warn"
expect_used = "warn"

[workspace.lints.rust]
unsafe_code = "deny"
missing_docs = "warn"
